@startuml

object Company{
-designation
-address
}

object LabOrder{
}

object Test{
-testID
-nhscode
-description
-dateDiagnosis
-timeDiagnosis
-dateValidation
-timeValidation
}


object Clinic{
-laboratoryID
-name
-address
-phoneNumber
-TINNumber
}

object Parameter{
-designation
}

object ParameterCategory{
-code
-description
-nhsld
}


object Administrator{
-authenticationID
-password
}

object Diagnosis{
-result
}

object Sample{
-barCode
-type
}

object Report{
-type
-result
}


object Employee{
-employeeID
-organizationRole
-name
-address
-phoneNumber
-email
-SOCCode

}

object MedicalLabTechnician{
}

object SpecialistDoctor{
-doctorIndexNumber
}

object LaboratoryCoordinator{

}

object Client{
-name
-citizenCardNumber
-nationalHealthcareServiceNumber
-birthdate
-sex
-taxIdentificationNumber
-phoneNumber
-email
}

object Receptionist{
}

object ClinicalChemistryTechnologist{

}

object ChemicalLaboratory{
-name
-address
-phoneNumber
-TINNumber
}

object TestType{
-testTypeID
-designation
}

object NHSReport{
}


object BarCodeAPI{
}


object NHSAPI{
}

object TimeReport{
}

object CollectingMethod{
-designation
}

Company "1" -- "*" TestType : conducts
TestType "*" -- "1" CollectingMethod : has

Company "1" -- "*" Test : performs
Company "1" -- "*" Clinic : has
Company "1" -- "1" ChemicalLaboratory : has
Company "1" -- "*" Parameter : capable of analysing
Company "1" -- "*" ParameterCategory : adopts


ParameterCategory "*" -- "1" Parameter : belongs to
ParameterCategory "1" -- "1" Administrator : is created by

Test "*" -- "1" Client : makes
Test "1" -- "*" Parameter : is of
Test "*" -- "1" TestType : is of
Test "1" -- "1" Diagnosis

Sample "*" -- "1" MedicalLabTechnician : is collected/analyzed by
Sample "*" -- "1" Test : is based on

Diagnosis "*" -- "1" SpecialistDoctor : makes
SpecialistDoctor "1" -- "1" Report : elaborates
Diagnosis "1" -- "1" Report : generates
Diagnosis "*" -- "1" Sample : is based on
Report "1" -- "1" Test : is based on
Report "*" -- "1" Client : is sent via application
Administrator "1" -- "*" Test : specifies
Receptionist "1" -- "*" Client : registers
Receptionist "1" -- "*" Test : registers
LaboratoryCoordinator "1" -- "*" Report : validates and confirms the report
ChemicalLaboratory "1" -- "*" Sample : is received
ClinicalChemistryTechnologist "1" -- "*" Sample : registers the result
ChemicalLaboratory "1" -- "*" Sample : it's where it analyzes
ChemicalLaboratory "1" -- "*" Report : it's where it writes
Clinic "1" -- "*" Sample : it's where are collected
Company "1" -- "1" Client : notifies by SMS when report is ready

Company "1" -- "*" Report : generates reports
NHSReport "1" -- "*" Test : are of type
Company "1" -- "*" NHSReport : generates reports
LabOrder "1" -- "1" Client : belongs to


package "BarCodeAPI" #DDDDDD{
	BarCodeAPI "1" -- "*" Sample : generates barCode
}


package "NHSAPI" #DDDDDD{
	NHSAPI "1" -- "*" NHSReport : are sent to	
}

Test "1" -- "1" LabOrder : is based on

ClinicalChemistryTechnologist "*" -- "1" Employee : is a
LaboratoryCoordinator "*" -- "1" Employee : is a
Receptionist "*" -- "1" Employee : is a
SpecialistDoctor "*" -- "1" Employee : is a
MedicalLabTechnician "*" -- "1" Employee : is a
Employee "*" -- "1" Company : works for

LaboratoryCoordinator "1" -- "*" TimeReport : generates
Administrator "*" -- "1" Employee : is a

Company "1" -- "*" Client : provides service to
Receptionist "*" -- "1" Clinic :  works in

@enduml
Administrator "1"-- "1" Pharmacy : creates
Courier "1"--"0..1" ParkingSpace : can reserve - um courier pode reservar ponto de abastecimento????
ParkingSpace "1"--"*" Courier : sends notifications
RegisteredUser "1"--"*" Product : views
object NonRegisteredUser
NonRegisteredUser "1"--"1" RegisteredUser : registers as
NonRegisteredUser "1"--"*" Product : views

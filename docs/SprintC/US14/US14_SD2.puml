@startuml
autonumber

actor "SpecialistDoctor" as Spec
participant ":CreateReportUI" as UI
participant ":CreateReportController" as CRC
participant ":Company" as COM

participant "TestStore: testStore" as TS
participant "repStore: ReportStore" as repStore
participant "testMapper: IdTestMapper" as idMapper
participant "rep : Report" as report
participant "TestParameters: testParams"
participant "TestResult"


activate Spec

Spec -> UI : asks to access the tests already made that have results

loop for every diagnosis to be written

activate UI

UI --> Spec : shows the tests and asks to choose one to make the report (test)

UI -> CRC : tIDDto = getTestID()

activate CRC

CRC -> COM : tStore = getTestStore()

activate COM

deactivate COM

CRC -> TS : tID = getTestID()

activate TS

deactivate TS

CRC -> idMapper : tIDDto = toDto(tID)

activate idMapper

deactivate idMapper

CRC -> "TestParameters: testParams" : tParams = getTestParameters()

activate "TestParameters: testParams"

deactivate "TestParameters: testParams"

CRC -> "TestResult" : tResult = getTestResult()

activate "TestResult"

deactivate "TestResult"

deactivate CRC

Spec <-- UI : shows testID and test analysis results and asks to confirm

deactivate UI

Spec -> UI : writes a diagnosis for that test

activate UI

UI -> CRC : createReport(diagnosis)

activate CRC

CRC -> repStore : rep = createReport(diagnosis)

activate repStore

create report

repStore -> report : create(diagnosis)

deactivate repStore

CRC -> repStore : validateReport(rep)

activate repStore

deactivate repStore

deactivate COM

deactivate CRC

UI --> Spec : shows report and asks to confirm

deactivate UI

Spec -> UI : confirms report

activate UI

UI -> CRC : saveReport()

activate CRC

CRC ->repStore : saveReport(rep)

activate repStore

repStore -> repStore : validateReport(rep)

activate repStore

deactivate repStore

repStore -> repStore : addReport(rep)

activate repStore

deactivate repStore

deactivate repStore

deactivate repStore

UI --> Spec : informs success

end
@enduml
@startuml
'https://plantuml.com/sequence-diagram

autonumber

actor  "Laboratory Cordinator" as LC

participant OverviewTestsUI

participant OverviewTestsController
participant Company
participant ReflectorUtility
participant AlgorithmInterface
activate ReflectorUtility

activate LC


LC -> OverviewTestsUI: wants to have an overview of the tests performed
activate OverviewTestsUI

OverviewTestsUI -> OverviewTestsController ** : create
activate OverviewTestsController

OverviewTestsController -> Company ** : company = App.getInstance().getCompany()
activate Company

OverviewTestsController -> Company : numRegisteredTests = getRegisteredTests().size()
OverviewTestsController -> Company : numValidatedTests = getValidatedTests().size()
OverviewTestsController -> Company : numAvailableTests = getAvailableTests().size()
OverviewTestsController -> Company : ArrayList<Test> tests = getValidatedTests()
Company -> Company : getValidatedTests()

OverviewTestsController -> OverviewTestsController : earlyDate = getEarliestDate(tests)
OverviewTestsController -> OverviewTestsController : lateDate = getLatestDate(tests)

OverviewTestsUI <- OverviewTestsController : show(numRegisteredTests,numValidatedTests,numAvailableTests,earlyDate,lateDate)

OverviewTestsUI -> LC: shows the tests that were performed and asks to know which Graphs and Statistics that he wants to see


deactivate OverviewTestsUI

LC -> OverviewTestsUI: selects the requested date Interval

activate OverviewTestsUI

OverviewTestsUI -> OverviewTestsUI : selectDates(date1, date2)

OverviewTestsUI -> LC: asks to confirm the date Interval

deactivate OverviewTestsUI

LC -> OverviewTestsUI: confirms data
activate OverviewTestsUI

OverviewTestsUI -> OverviewTestsController : changeDates(date1,date2)

OverviewTestsController -> OverviewTestsController : setEarlyDate(date1)
OverviewTestsController -> OverviewTestsController : setLateDate(date2)

ReflectorUtility -> AlgorithmInterface  : adapterReflection(App.getInstance().getAlgorithmAdapter())
activate AlgorithmInterface
OverviewTestsController -> AlgorithmInterface : GraphData = createEntries(earlyDate, lateDate)


AlgorithmInterface -> AlgorithmInterface : GraphData = calculate(tests)
OverviewTestsUI <- OverviewTestsController : javaFX.Draw(GraphData)
OverviewTestsUI -> LC: informs success or insuccess of the operation

deactivate OverviewTestsUI

@enduml

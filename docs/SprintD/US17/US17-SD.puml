@startuml
'https://plantuml.com/sequence-diagram

autonumber

actor  "Laboratory Cordinator" as LC

participant ":ImportTestsUI" as ImportTestsUI

participant ImportTestsUI
participant ImportTestsController
participant ReflectorUtility
activate ReflectorUtility
activate Mapper

activate LC

loop
LC -> ImportTestsUI: wants to import clinical tests from CSV file
activate ImportTestsUI

ImportTestsUI -> ImportTestsController ** : create
activate ImportTestsController

ImportTestsUI -> ImportTestsUI : AskPath(pathname)


ImportTestsUI -> LC: asks to introduce the path of the CSV file

deactivate ImportTestsUI

LC -> ImportTestsUI:  inserts the requested data
activate ImportTestsUI
ImportTestsUI -> ImportTestsController
ImportTestsController -> Company ** : App.getInstance().getCompany()
activate Company

ImportTestsController -> ImportTestsController : String adapterClass = App.getImporterAdapter()
ImportTestsController -> ImporterInterface ** : create
ImportTestsController -> ReflectorUtility : ImporterInterface = ImporterReflection(adapterClass)
activate ImporterInterface
ImportTestsController -> ImporterInterface : importFrom(pathname)

loop until EOF
ImporterInterface -> Client ** : create(args ...)
activate Client
ImporterInterface -> Test ** : create(args ...)
activate Test
ImporterInterface -> Lab ** : create(args ...)
activate Lab
ImporterInterface -> Parameters ** : create(args ...)
activate Parameters
ImporterInterface -> TestType ** : create(args ...)
activate TestType

'controller saves file instances
ImporterInterface -> ImportTestsController : return args
ImportTestsController -> Company : boolean success = save(args)
alt success then
    ImportTestsController -> Mapper : ClientDTO = toDTO(Client)
    ImportTestsController -> Mapper : TestDTO = toDTO(Test)
    ImportTestsController -> ImportTestsUI : show(args)
end
ImportTestsController -> ImportTestsUI : show(success)

ImportTestsUI -> LC: validates the path and informs success or insuccess of the operation

deactivate ImportTestsUI



@enduml